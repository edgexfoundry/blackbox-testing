{
	"info": {
		"_postman_id": "82f25b0a-664c-4fc5-ba81-b62cefc0c167",
		"name": "\b\bcore-data-importer",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Import valueDescriptor",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "8fbfbf8d-1505-48ae-af9e-dc6b532889b4",
						"exec": [
							"// Prepare test data",
							"var data = [",
							"    {",
							"      \"origin\": 0,",
							"      \"name\": \"co2\",",
							"      \"min\": \"50\",",
							"      \"max\": \"260\",",
							"      \"type\": \"F\",",
							"      \"uomLabel\": \"co2\",",
							"      \"defaultValue\": \"0\",",
							"      \"formatting\": \"%s\",",
							"      \"description\": \"co2 description\",",
							"      \"labels\": [",
							"        \"temp\",",
							"        \"hvac\"",
							"      ]",
							"    },",
							"    {",
							"      \"origin\": 0,",
							"      \"name\": \"RPM\",",
							"      \"min\": \"0\",",
							"      \"max\": \"1200\",",
							"      \"type\": \"F\",",
							"      \"uomLabel\": \"degreecel\",",
							"      \"defaultValue\": \"0\",",
							"      \"formatting\": \"%s\",",
							"      \"description\": \"RPM description\",",
							"      \"labels\": [",
							"        \"RPM\"",
							"      ]",
							"    },",
							"    {",
							"      \"origin\": 0,",
							"      \"name\": \"O2\",",
							"      \"min\": \"0\",",
							"      \"max\": \"15\",",
							"      \"type\": \"F\",",
							"      \"uomLabel\": \"degreecel\",",
							"      \"defaultValue\": \"0\",",
							"      \"formatting\": \"%s\",",
							"      \"description\": \"degreecel description\",",
							"      \"labels\": [",
							"        \"temp\",",
							"        \"hvac\"",
							"      ]",
							"    },",
							"    {",
							"      \"origin\": 0,",
							"      \"name\": \"temperature\",",
							"      \"min\": \"0\",",
							"      \"max\": \"100\",",
							"      \"type\": \"F\",",
							"      \"uomLabel\": \"temperature\",",
							"      \"defaultValue\": \"0\",",
							"      \"formatting\": \"%s\",",
							"      \"description\": \"temperature description\",",
							"      \"labels\": [",
							"        \"temp\",",
							"        \"hvac\"",
							"      ]",
							"    },",
							"    {",
							"      \"origin\": 0,",
							"      \"name\": \"luminousIntensity\",",
							"      \"min\": \"0\",",
							"      \"max\": \"10000\",",
							"      \"type\": \"F\",",
							"      \"uomLabel\": \"Candels\",",
							"      \"defaultValue\": \"0\",",
							"      \"formatting\": \"%s\",",
							"      \"description\": \"luminousIntensity description\",",
							"      \"labels\": [",
							"        \"candel\"",
							"      ]",
							"    },",
							"    {",
							"      \"origin\": 0,",
							"      \"name\": \"Amount of Substance\",",
							"      \"min\": \"0\",",
							"      \"max\": \"1000\",",
							"      \"type\": \"F\",",
							"      \"uomLabel\": \"Moles\",",
							"      \"defaultValue\": \"0\",",
							"      \"formatting\": \"%s\",",
							"      \"description\": \"Substance description\",",
							"      \"labels\": [",
							"        \"mole\"",
							"      ]",
							"    },",
							"    {",
							"      \"origin\": 0,",
							"      \"name\": \"ohm\",",
							"      \"min\": \"0\",",
							"      \"max\": \"500\",",
							"      \"type\": \"F\",",
							"      \"uomLabel\": \"ohm\",",
							"      \"defaultValue\": \"0\",",
							"      \"formatting\": \"%s\",",
							"      \"description\": \"ohm description\",",
							"      \"labels\": [",
							"        \"ohm\"",
							"      ]",
							"    },",
							"    {",
							"      \"origin\": 0,",
							"      \"name\": \"temp\",",
							"      \"min\": \"0\",",
							"      \"max\": \"500\",",
							"      \"type\": \"F\",",
							"      \"uomLabel\": \"ohm\",",
							"      \"defaultValue\": \"0\",",
							"      \"formatting\": \"%s\",",
							"      \"description\": \"temp description\",",
							"      \"labels\": [",
							"        \"ohm\"",
							"      ]",
							"    },",
							"    {",
							"      \"origin\": 0,",
							"      \"name\": \"pressure\",",
							"      \"min\": \"0\",",
							"      \"max\": \"500\",",
							"      \"type\": \"F\",",
							"      \"uomLabel\": \"ohm\",",
							"      \"defaultValue\": \"0\",",
							"      \"formatting\": \"%s\",",
							"      \"description\": \"pressure description\",",
							"      \"labels\": [",
							"        \"ohm\"",
							"      ]",
							"    }",
							"];",
							"",
							"pm.environment.set(\"data\", data);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "47de7093-d096-4c92-83f4-3f06215ecf31",
						"exec": [
							"var baseUrl = pm.environment.get(\"baseUrl\");",
							"var data = pm.environment.get(\"data\");",
							"var request = {",
							"  url: baseUrl+'/api/v1/valuedescriptor',",
							"  method: 'POST',",
							"  body: {",
							"    mode: 'raw',",
							"    raw: 'json string'",
							"  }",
							"};",
							"",
							"var count = 0;",
							"var failedCount = 0;",
							"data.forEach(function(item, index) { ",
							"    request.body.raw = JSON.stringify(item)",
							"    pm.sendRequest(request, function (err, res) {",
							"        if (res.code!=200) {",
							"            console.log(index, res.stream.toString());",
							"            failedCount++",
							"        }else{",
							"            count++",
							"        }",
							"    });",
							"});",
							"",
							"// Wait for API calls finish.",
							"var interval = setInterval(function(){",
							"    if(count+failedCount == data.length){",
							"        clearInterval(interval);",
							"        console.log(count +\" rows imported\");",
							"        console.log(failedCount +\" rows import failed\");",
							"    }",
							"}, 500);",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{baseUrl}}/api/v1/ping",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v1",
						"ping"
					]
				}
			},
			"response": []
		},
		{
			"name": "Import event",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "8fbfbf8d-1505-48ae-af9e-dc6b532889b4",
						"exec": [
							"// Prepare test data",
							"var data = [];",
							"for(var i =0 ; i<5 ;i++){",
							"    data.push(",
							"        {",
							"          \"origin\": 471806386920,",
							"          \"device\": \"powerScoutMeter\",",
							"          \"readings\": [",
							"            {",
							"              \"origin\": 1471806386918,",
							"              \"device\": \"powerScoutMeter\",",
							"              \"name\": \"power\",",
							"              \"value\": \"39\"",
							"            },",
							"            {",
							"              \"origin\": 1471806386919,",
							"              \"device\": \"powerScoutMeter\",",
							"              \"pushed\": 0,",
							"              \"name\": \"RPM\",",
							"              \"value\": \"38\"",
							"            },",
							"            {",
							"              \"origin\": 1471806386918,",
							"              \"device\": \"powerScoutMeter\",",
							"              \"name\": \"ohm\",",
							"              \"value\": \"6\"",
							"            }",
							"          ]",
							"        }",
							"    );",
							"    data.push(",
							"        {",
							"          \"origin\": 471806386919,",
							"          \"device\": \"ohmmeter\",",
							"          \"readings\": [",
							"            {",
							"              \"origin\": 1471806386918,",
							"              \"device\": \"ohmmeter\",",
							"              \"name\": \"ohm\",",
							"              \"value\": \"6\"",
							"            },",
							"            {",
							"              \"origin\": 1471806386919,",
							"              \"device\": \"ohmmeter\",",
							"              \"pushed\": 0,",
							"              \"name\": \"RPM\",",
							"              \"value\": \"38\"",
							"            },",
							"          ]",
							"        }",
							"    );",
							"    data.push(",
							"        {",
							"          \"origin\": 471806386919,",
							"          \"device\": \"industrialThermostat\",",
							"          \"readings\": [",
							"            {",
							"              \"origin\": 1471806386918,",
							"              \"device\": \"industrialThermostat\",",
							"              \"name\": \"percentage\",",
							"              \"value\": \"6\"",
							"            }",
							"          ]",
							"        }",
							"    );",
							"    data.push(",
							"        {",
							"          \"origin\": 471806386919,",
							"          \"device\": \"57ba04a1189b95b8afcdade1\",",
							"          \"readings\": [",
							"            {",
							"              \"origin\": 1471806386918,",
							"              \"device\": \"57ba04a1189b95b8afcdade1\",",
							"              \"name\": \"percentage\",",
							"              \"value\": \"6\"",
							"            },",
							"            {",
							"              \"origin\": 1471806386919,",
							"              \"device\": \"57ba04a1189b95b8afcdade1\",",
							"              \"pushed\": 0,",
							"              \"name\": \"temperature\",",
							"              \"value\": \"39\"",
							"            }",
							"          ]",
							"        }",
							"    ); ",
							"    data.push(",
							"        {",
							"          \"origin\": 471806386919,",
							"          \"pushed\": 1471806399999,",
							"          \"device\": \"proximitySensor\",",
							"          \"readings\": [",
							"            {",
							"              \"origin\": 1471806386918,",
							"              \"device\": \"proximitySensor\",",
							"              \"name\": \"OutputCurrent\",",
							"              \"value\": \"6\"",
							"            },",
							"            {",
							"              \"origin\": 1471806386919,",
							"              \"device\": \"proximitySensor\",",
							"              \"pushed\": 0,",
							"              \"name\": \"RPM\",",
							"              \"value\": \"38\"",
							"            },",
							"            {",
							"              \"origin\": 1471806386918,",
							"              \"device\": \"proximitySensor\",",
							"              \"name\": \"ohm\",",
							"              \"value\": \"6\"",
							"            }",
							"          ]",
							"        }",
							"    );",
							"    ",
							"}",
							"",
							"pm.environment.set(\"data\", data);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "47de7093-d096-4c92-83f4-3f06215ecf31",
						"exec": [
							"var baseUrl = pm.environment.get(\"baseUrl\");",
							"var data = pm.environment.get(\"data\");",
							"var request = {",
							"  url: baseUrl+'/api/v1/event',",
							"  method: 'POST',",
							"  body: {",
							"    mode: 'raw',",
							"    raw: 'json string'",
							"  }",
							"};",
							"",
							"// request.body.raw = JSON.stringify(data[0])",
							"// pm.sendRequest(request, function (err, res) {",
							"//     console.log(res);",
							"//   console.log(err);",
							"// });",
							"",
							"var count = 0;",
							"var failedCount = 0;",
							"data.forEach(function(item, index) { ",
							"    request.body.raw = JSON.stringify(item)",
							"    pm.sendRequest(request, function (err, res) {",
							"        if (res.code!=200) {",
							"            console.log(index, res.stream.toString());",
							"            failedCount++",
							"        }else{",
							"            count++",
							"        }",
							"    });",
							"});",
							"",
							"// Wait for API calls finish.",
							"var interval = setInterval(function(){",
							"    if(count+failedCount == data.length){",
							"        clearInterval(interval);",
							"        console.log(count +\" rows imported\");",
							"        console.log(failedCount +\" rows import failed\");",
							"    }",
							"}, 500);",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{baseUrl}}/api/v1/ping",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v1",
						"ping"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "9895fac7-3c08-4435-a3d4-f8e49206b681",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "0ac20a84-512f-47d0-8ede-206fda755218",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}